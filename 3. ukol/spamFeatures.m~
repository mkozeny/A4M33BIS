function [f] = spamFeatures(fileName)
    %format long e;
    info = imfinfo(fileName);
    imgFormat = info.Format;
    image = double(imread(fileName,imgFormat));
    red = image(:,:,1);
    %green = image(:,:,2);
    %blue = image(:,:,3);
    T = 4;
    position = 1;
    values = [];
    for i=-T:T
        values(position) = i;
        position = position +1;
    end
    
    differenceRightMatrix = red(:,1:(end-1)) - red(:,2:end);
    differenceLeftMatrix = red(:,2:end) - red(:,1:(end-1));
    differenceDownMatrix = red(1:(end-1),:) - red(2:end,:);
    differenceUpMatrix = red(2:end,:) - red(1:(end-1),:);
    differenceDownRightMatrix = red(1:(end-1),1:(end-1)) - red(2:end,2:end);
    differenceUpLeftMatrix = red(2:end,2:end) - red(1:(end-1),1:(end-1));
    differenceDownLeftMatrix = red(1:(end-1),2:end) - red(2:end,1:(end-1));
    differenceUpRightMatrix = red(2:end,1:(end-1)) - red(1:(end-1),2:end);
    
    
    
    probabilityMatrixRight = getProbabilityMatrix(differenceRightMatrix,values,0,1);
    probabilityMatrixLeft = getProbabilityMatrix(differenceLeftMatrix,values,0,-1);
    probabilityMatrixDown = getProbabilityMatrix(differenceDownMatrix,values,1,0);
    probabilityMatrixUp = getProbabilityMatrix(differenceUpMatrix,values,-1,0);
    probabilityMatrixDownRight = getProbabilityMatrix(differenceDownRightMatrix,values,1,1);
    probabilityMatrixUpLeft = getProbabilityMatrix(differenceUpLeftMatrix,values,-1,-1);
    probabilityMatrixDownLeft = getProbabilityMatrix(differenceDownLeftMatrix,value,1,-1);
    
    
    probabilityMatrixDownRed = zeros(2*T+1,2*T+1);
    for j=1:n2
        for i=1:(m2-1)
            rowDiff = differenceDownRedMatrix(i+1,j);
            colDiff = differenceDownRedMatrix(i,j);
            if rowDiff>= -T && rowDiff<= T && colDiff>= -T && colDiff<= T
                probabilityMatrixDownRed(rowDiff+T+1,colDiff+T+1) = probabilityMatrixDownRed(rowDiff+T+1,colDiff+T+1)+1;
            end
        end
    end
    probabilityMatrixDownRed = double(probabilityMatrixDownRed)/double(m2*n2);
    probabilityMatrixDownRed = double(probabilityMatrixDownRed)./double(relDownRedFreqMatrix);
    
    
    probabilityMatrixDownRightRed = zeros(2*T+1,2*T+1);
    for i=1:(m3-1)
        for j=1:(n3-1)
            rowDiff = differenceDownRightRedMatrix(i+1,j+1);
            colDiff = differenceDownRightRedMatrix(i,j);
            if rowDiff>= -T && rowDiff<= T && colDiff>= -T && colDiff<= T
                probabilityMatrixDownRightRed(rowDiff+T+1,colDiff+T+1) = probabilityMatrixDownRightRed(rowDiff+T+1,colDiff+T+1)+1;
            end
        end
    end
    probabilityMatrixDownRightRed = double(probabilityMatrixDownRightRed)/double(m3*n3);
    probabilityMatrixDownRightRed = double(probabilityMatrixDownRightRed)./double(relDownRightRedFreqMatrix);
    
    
    probabilityMatrixDownLeftRed = zeros(2*T+1,2*T+1);
    for i=1:(m4-1)
        for j=2:n4
            rowDiff = differenceDownLeftRedMatrix(i+1,j-1);
            colDiff = differenceDownLeftRedMatrix(i,j);
            if rowDiff>= -T && rowDiff<= T && colDiff>= -T && colDiff<= T
                probabilityMatrixDownLeftRed(rowDiff+T+1,colDiff+T+1) = probabilityMatrixDownLeftRed(rowDiff+T+1,colDiff+T+1)+1;
            end
        end
    end
    probabilityMatrixDownLeftRed = double(probabilityMatrixDownLeftRed)/double(m4*n4);
    probabilityMatrixDownLeftRed = double(probabilityMatrixDownLeftRed)./double(relDownLeftRedFreqMatrix);
    
    
    probabilityMatrixLeftRed = zeros(2*T+1,2*T+1);
    for i=1:m5
        for j=2:n5
            rowDiff = differenceLeftRedMatrix(i,j-1);
            colDiff = differenceLeftRedMatrix(i,j);
            if rowDiff>= -T && rowDiff<= T && colDiff>= -T && colDiff<= T
                probabilityMatrixLeftRed(rowDiff+T+1,colDiff+T+1) = probabilityMatrixLeftRed(rowDiff+T+1,colDiff+T+1)+1;
            end
        end
    end
    probabilityMatrixLeftRed = double(probabilityMatrixLeftRed)/double(m5*n5);
    probabilityMatrixLeftRed = double(probabilityMatrixLeftRed)./double(relLeftRedFreqMatrix);
    
    
    probabilityMatrixUpRed = zeros(2*T+1,2*T+1);
    for i=2:m6
        for j=1:n6
            rowDiff = differenceUpRedMatrix(i-1,j);
            colDiff = differenceUpRedMatrix(i,j);
            if rowDiff>= -T && rowDiff<= T && colDiff>= -T && colDiff<= T
                probabilityMatrixUpRed(rowDiff+T+1,colDiff+T+1) = probabilityMatrixUpRed(rowDiff+T+1,colDiff+T+1)+1;
            end
        end
    end
    probabilityMatrixUpRed = double(probabilityMatrixUpRed)/double(m6*n6);
    probabilityMatrixUpRed = double(probabilityMatrixUpRed)./double(relUpRedFreqMatrix);
    
    probabilityMatrixUpRightRed = zeros(2*T+1,2*T+1);
    for i=2:m7
        for j=1:(n7-1)
            rowDiff = differenceUpRightRedMatrix(i-1,j+1);
            colDiff = differenceUpRightRedMatrix(i,j);
            if rowDiff>= -T && rowDiff<= T && colDiff>= -T && colDiff<= T
                probabilityMatrixUpRightRed(rowDiff+T+1,colDiff+T+1) = probabilityMatrixUpRightRed(rowDiff+T+1,colDiff+T+1)+1;
            end
        end
    end
    probabilityMatrixUpRightRed = double(probabilityMatrixUpRightRed)/double(m7*n7);
    probabilityMatrixUpRightRed = double(probabilityMatrixUpRightRed)./double(relUpRightRedFreqMatrix);
    
    
    probabilityMatrixUpLeftRed = zeros(2*T+1,2*T+1);
    for i=2:m4
        for j=2:n4
            rowDiff = differenceUpLeftRedMatrix(i-1,j-1);
            colDiff = differenceUpLeftRedMatrix(i,j);
            if rowDiff>= -T && rowDiff<= T && colDiff>= -T && colDiff<= T
                probabilityMatrixUpLeftRed(rowDiff+T+1,colDiff+T+1) = probabilityMatrixUpLeftRed(rowDiff+T+1,colDiff+T+1)+1;
            end
        end
    end
    probabilityMatrixUpLeftRed = double(probabilityMatrixUpLeftRed)/double(m8*n8);
    probabilityMatrixUpLeftRed = double(probabilityMatrixUpLeftRed)./double(relUpLeftRedFreqMatrix);
    
    %f1 = (probabilityMatrixRightRed(:) + probabilityMatrixDownRed(:))/2;
    %f2 = (probabilityMatrixDownRightRed(:) + probabilityMatrixDownLeftRed(:))/2;
    f1 = double(probabilityMatrixRightRed(:) + probabilityMatrixLeftRed(:) + probabilityMatrixDownRed(:)+ probabilityMatrixUpRed(:))/double(4);
    f2 = double(probabilityMatrixDownRightRed(:) + probabilityMatrixUpLeftRed(:) + probabilityMatrixDownLeftRed(:)+ probabilityMatrixUpRightRed(:))/double(4);
    f = [f1 f2];